const mysql = require('mysql2/promise');

// Test de connexion MySQL direct super simple
exports.testMySQLConnection = async (req, res) => {
  try {
    console.log('üîó Test connexion MySQL directe...');
    
    // Connexion simple
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'queue_management'
    });
    
    console.log('‚úÖ Connexion MySQL √©tablie');
    
    // Test simple : r√©cup√©rer un ticket
    const [rows] = await connection.execute('SELECT id, status FROM tickets WHERE id = 14');
    
    console.log('‚úÖ Requ√™te SELECT r√©ussie:', rows);
    
    await connection.end();
    console.log('‚úÖ Connexion ferm√©e');
    
    res.json({
      success: true,
      message: 'Connexion MySQL OK',
      data: rows[0] || null
    });
    
  } catch (error) {
    console.error('‚ùå Erreur MySQL:', error);
    res.status(500).json({
      error: error.message,
      code: error.code,
      errno: error.errno,
      sqlState: error.sqlState,
      stack: error.stack
    });
  }
};

// Test de mise √† jour super simple
exports.testSimpleUpdate = async (req, res) => {
  try {
    const { id } = req.params;
    const { status } = req.body;
    
    console.log('‚ö° Test mise √† jour simple - ID:', id, 'Status:', status);
    
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'queue_management'
    });
    
    // Supprimer le trigger
    await connection.execute('DROP TRIGGER IF EXISTS update_queue_position');
    console.log('‚úÖ Trigger supprim√©');
    
    // Mise √† jour
    const [result] = await connection.execute(
      'UPDATE tickets SET status = ? WHERE id = ?',
      [status, id]
    );
    
    console.log('‚úÖ Update r√©ussi, affected rows:', result.affectedRows);
    
    // V√©rifier le r√©sultat
    const [updated] = await connection.execute(
      'SELECT id, status FROM tickets WHERE id = ?',
      [id]
    );
    
    await connection.end();
    
    res.json({
      success: true,
      message: 'Mise √† jour r√©ussie',
      affectedRows: result.affectedRows,
      ticket: updated[0]
    });
    
  } catch (error) {
    console.error('‚ùå Erreur mise √† jour:', error);
    res.status(500).json({
      error: error.message,
      code: error.code,
      errno: error.errno
    });
  }
};
